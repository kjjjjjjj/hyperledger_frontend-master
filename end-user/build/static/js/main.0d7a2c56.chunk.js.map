{"version":3,"sources":["components/HomeNavbar.js","components/Login.js","components/Home.js","components/Create.js","components/Quote.js","App.js","serviceWorker.js","index.js"],"names":["HomeNavbar","Navbar","className","to","id","Login","LoginContainer","type","placeholder","htmlFor","Component","styled","div","Home","useState","posts","setPosts","fetchPosts","axios","get","then","res","data","catch","err","console","log","useEffect","MainContainer","map","job","key","quantity","materials","pathname","parts","target","remarks","price","stakeholder","_id","params","onClick","delete","alert","Create","setJob","setQuantity","setParts","setMaterials","setRemarks","message","setMessage","CreateContainer","onSubmit","e","preventDefault","jobs","startsWith","post","encType","value","onChange","selected","Quote","props","setPrice","match","JobContainer","QuoteContainer","put","history","push","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.0d7a2c56.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar } from \"react-bootstrap\";\n\nconst token = \"123\";\n\nconst HomeNavbar = () => {\n  return (\n    <div>\n      <Navbar className=\"navbar navbar-expand-lg navbar-light bg-light sticky-top\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to={token ? \"/home\" : \"/\"}>\n            HyperLedger\n          </Link>\n          {token && (\n            <>\n              <Link className=\"nav-link\" to=\"/create\">\n                Create\n              </Link>\n              <Link className=\"nav-link\" to=\"/home\">\n                View\n              </Link>\n            </>\n          )}\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n            <ul className=\"navbar-nav ml-auto\">\n              {!token && (\n                <>\n                  <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/\">\n                      Login\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/sign-up\">\n                      Sign up\n                    </Link>\n                  </li>\n                </>\n              )}\n              {token && (\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/profile\">\n                    Profile\n                  </Link>\n                </li>\n              )}\n            </ul>\n          </div>\n        </div>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default HomeNavbar;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport HomeNavbar from \"./HomeNavbar\";\nimport styled from \"styled-components\";\n\nexport default class Login extends Component {\n  render() {\n    return (\n      <>\n        <HomeNavbar></HomeNavbar>\n        <LoginContainer>\n          <form>\n            <h3>Sign In</h3>\n\n            <div className=\"form-group\">\n              <p className=\"text\">Email address</p>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Enter email\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <p className=\"text\">Password</p>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Enter password\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <div className=\"form-check\">\n                <input\n                  type=\"checkbox\"\n                  className=\"form-check-input\"\n                  id=\"customCheck1\"\n                />\n                <p className=\"form-check-label text\" htmlFor=\"customCheck1\">\n                  Remember me\n                </p>\n              </div>\n            </div>\n\n            <Link\n              to=\"/home\"\n              type=\"submit\"\n              className=\"btn btn-primary btn-block\"\n            >\n              Submit\n            </Link>\n            <p className=\"forgot-password text-right\">\n              <Link to=\"/home\">Forgot password?</Link>\n            </p>\n          </form>\n        </LoginContainer>\n      </>\n    );\n  }\n}\n\nconst LoginContainer = styled.div`\n  margin: 5rem auto;\n  padding: 3rem;\n  width: 30rem;\n\n  h3 {\n    margin: 0 0 3rem;\n  }\n\n  .text {\n    text-align: left;\n  }\n`;\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport HomeNavbar from \"./HomeNavbar\";\n\nconst Home = () => {\n  const [posts, setPosts] = useState([]);\n\n  const fetchPosts = () => {\n    axios\n      .get(\"/jobs\")\n      .then((res) => setPosts(res.data))\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  const deleteArticle = (id) => {\n    axios\n      .delete(`/jobs/${id}`)\n      .then((res) => {\n        fetchPosts();\n        alert(res.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <>\n      <HomeNavbar></HomeNavbar>\n      <MainContainer>\n        {posts.map((job, key) => (\n          <div className=\"container\" key={key}>\n            <h2>{job.job}</h2>\n            <p>Quantity: {job.quantity}</p>\n            <p>Materials: {job.materials}</p>\n            <p>\n              Parts:{\" \"}\n              <Link\n                to={{\n                  pathname: job.parts,\n                }}\n                target=\"_blank\"\n              >\n                {job.parts}\n              </Link>\n            </p>\n            {job.remarks && <p>Remarks: {job.remarks}</p>}\n            {job.price && <p>Price ($): {job.price}</p>}\n            <span className=\"badge badge-secondary p-2\">{job.stakeholder}</span>\n            <div className=\"row my-4\">\n              <div className=\"col-sm-4\">\n                <Link\n                  to={{\n                    pathname: `/quote/${job._id}`,\n                  }}\n                  params={{ id: job._id }}\n                  className=\"btn btn-outline-success\"\n                >\n                  Accept\n                </Link>\n              </div>\n              <div className=\"col-sm-4\">\n                <button\n                  onClick={() => deleteArticle(job._id)}\n                  className=\"btn btn-outline-danger\"\n                >\n                  Decline\n                </button>\n              </div>\n            </div>\n            <hr />\n          </div>\n        ))}\n      </MainContainer>\n    </>\n  );\n};\n\nexport default Home;\n\nconst MainContainer = styled.div`\n  margin: 5rem auto;\n  display: grid;\n  max-width: 70rem;\n  grid-gap: 1rem;\n\n  @media (min-width: 36rem) {\n     {\n      grid-template-columns: repeat(2, 1fr);\n    }\n  }\n\n  @media (min-width: 55rem) {\n     {\n      grid-template-columns: repeat(3, 1fr);\n    }\n  }\n\n  h2 {\n    margin: 0 0 2rem;\n  }\n`;\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport HomeNavbar from \"./HomeNavbar\";\n\nconst Create = () => {\n  const [job, setJob] = useState(\"\");\n  const [quantity, setQuantity] = useState(\"\");\n  const [parts, setParts] = useState(\"\");\n  const [materials, setMaterials] = useState(\"ABS\");\n  const [remarks, setRemarks] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const changeOnClick = (e) => {\n    e.preventDefault();\n\n    const jobs = {\n      job,\n      quantity,\n      parts,\n      materials,\n      remarks,\n    };\n\n    if (!jobs.parts.startsWith(\"https://\")) {\n      jobs.parts = \"https://\" + jobs.parts;\n    }\n\n    setJob(\"\");\n    setQuantity(\"\");\n    setParts(\"\");\n    setMaterials(\"\");\n    setRemarks(\"\");\n\n    axios\n      .post(\"/jobs/add\", jobs)\n      .then((res) => setMessage(res.data))\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <>\n      <HomeNavbar></HomeNavbar>\n      <CreateContainer>\n        <div className=\"container\">\n          <h1>Create Job</h1>\n          <span className=\"message\">{message}</span>\n          <form onSubmit={changeOnClick} encType=\"multipart/form-data\">\n            <div className=\"form-group\">\n              <label htmlFor=\"job\">Job Name</label>\n              <input\n                type=\"text\"\n                value={job}\n                onChange={(e) => setJob(e.target.value)}\n                className=\"form-control\"\n                placeholder=\"Job Name\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"materials\">Materials</label>\n              <select\n                value={materials}\n                onChange={(e) => setMaterials(e.target.value)}\n                className=\"form-control\"\n                placeholder=\"Materials\"\n              >\n                <option selected value=\"ABS\">\n                  ABS\n                </option>\n                <option value=\"Nylon (Polyamide)\">Nylon (Polyamide)</option>\n                <option value=\"PET\">PET</option>\n                <option value=\"Alumium\">Aluminum</option>\n                <option value=\"Inconel\">Inconel</option>\n                <option value=\"Nickel\">Nickel</option>\n                <option value=\"Stainless Steel\">Stainless Steel</option>\n                <option value=\"Titanium\">Titanium</option>\n                <option value=\"SLA Resins\">SLA Resins</option>\n                <option value=\"PolyJet Resins\">PolyJet Resins</option>\n              </select>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"quantity\">Quantity</label>\n              <input\n                type=\"number\"\n                value={quantity}\n                onChange={(e) => setQuantity(e.target.value)}\n                className=\"form-control\"\n                placeholder=\"Quantity\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"parts\">Link for Parts</label>\n              <input\n                type=\"text\"\n                value={parts}\n                onChange={(e) => setParts(e.target.value)}\n                className=\"form-control\"\n                placeholder=\"Link\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"remarks\">Remarks</label>\n              <input\n                type=\"text\"\n                value={remarks}\n                onChange={(e) => setRemarks(e.target.value)}\n                className=\"form-control\"\n                placeholder=\"Remarks\"\n              />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Post Job\n            </button>\n          </form>\n        </div>\n      </CreateContainer>\n    </>\n  );\n};\n\nexport default Create;\n\nconst CreateContainer = styled.div`\n  margin: 3rem auto;\n  padding: 4rem;\n  width: 30rem;\n\n  h1 {\n    font-weight: 400;\n  }\n\n  .btn-primary {\n    margin-top: 2rem;\n    background: var(--dark-green);\n    border: none;\n    &:hover {\n      background: var(--light-green);\n    }\n  }\n\n  .message {\n    font-weight: 900;\n    color: tomato;\n    padding: 1rem 1rem 1rem 0;\n  }\n`;\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport HomeNavbar from \"./HomeNavbar\";\n\nconst Quote = (props) => {\n  const [job, setJob] = useState([]);\n  const [price, setPrice] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [redirectHome, setredirectHome] = useState(false);\n\n  console.log(props);\n\n  const fetchJob = (id) => {\n    axios\n      .get(`/jobs/${id}`)\n      .then((res) => {\n        setJob(res.data);\n        console.log(res.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    fetchJob(props.match.params.id);\n    console.log(props.match.params.id);\n  }, [props.match.params.id]);\n\n  useEffect(() => {});\n\n  const changeOnClick = (e) => {\n    e.preventDefault();\n\n    setPrice(\"\");\n\n    axios\n      .put(`/jobs/update/${job._id}`, { ...job, price })\n      .then((res) => {\n        setMessage(res.data);\n        props.history.push(\"/home\");\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <>\n      <HomeNavbar></HomeNavbar>\n      <JobContainer>\n        <h2>{job.job}</h2>\n        <p>Quantity: {job.quantity}</p>\n        <p>Materials: {job.materials}</p>\n        <p>\n          Parts:{\" \"}\n          <Link\n            to={{\n              pathname: \"https://\" + job.parts,\n            }}\n            target=\"_blank\"\n          >\n            {job.parts}\n          </Link>\n        </p>\n        {job.remarks && <p>Remarks: {job.remarks}</p>}\n        <span className=\"badge badge-secondary p-2\">{job.stakeholder}</span>\n        <hr />\n      </JobContainer>\n      <QuoteContainer>\n        <div className=\"container\">\n          <h1>Post Job Quotation</h1>\n          <span className=\"message\">{message}</span>\n          <form onSubmit={changeOnClick} encType=\"multipart/form-data\">\n            <div className=\"form-group\">\n              <label htmlFor=\"parts\">Price ($)</label>\n              <input\n                type=\"number\"\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n                className=\"form-control\"\n                placeholder=\"Price\"\n              />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Post Quotation\n            </button>\n          </form>\n        </div>\n      </QuoteContainer>\n    </>\n  );\n};\n\nexport default Quote;\n\nconst JobContainer = styled.div`\n  margin: auto;\n  margin-bottom: 1rem;\n  display: grid;\n  max-width: 70rem;\n  grid-gap: 1rem;\n  border: 1px light grey;\n  padding: 4rem;\n  width: 30rem;\n\n  h2 {\n    margin: 0 0 5px;\n  }\n`;\n\nconst QuoteContainer = styled.div`\n  margin: 1rem auto;\n  padding: 2rem;\n  width: 30rem;\n\n  h1 {\n    font-weight: 400;\n  }\n\n  .btn-primary {\n    margin-top: 2rem;\n    background: var(--dark-green);\n    border: none;\n    &:hover {\n      background: var(--light-green);\n    }\n  }\n\n  .message {\n    font-weight: 900;\n    color: tomato;\n    padding: 1rem 1rem 1rem 0;\n  }\n`;\n","import React from \"react\";\nimport { BrowserRouter as Switch, Route } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Home from \"./components/Home\";\nimport Create from \"./components/Create\";\nimport Quote from \"./components/Quote\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"auth-inner\">\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/create\" component={Create} />\n          <Route exact path=\"/quote/:id\" component={Quote} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}